{"version":3,"sources":["widgets/Indicators.tsx","widgets/Menus.tsx","widgets/FullPageSlider.tsx","widgets/VerticalTitle.tsx","pages/Introduction.tsx","pages/Skills.tsx","pages/Works.tsx","App.tsx","index.tsx"],"names":["Indicators","currentBgColor","this","props","color","Color","isLight","active","negate","hex","default","darken","lighten","style","position","right","top","bottom","display","flexDirection","justifyContent","keys","map","item","key","width","height","borderRadius","background","activeKey","setColor","marginBottom","onClick","React","Menus","border","padding","backgroundColor","backgroundClip","borderTop","borderBottom","zIndex","iconStyle","FullPageSlider","scrollChange","prevKey","state","list","show","element","bgColor","setState","timer","setTimeout","scrollAble","clearTimeout","length","children","i","e","Math","abs","deltaY","currentKeyIndex","findIndex","downKey","upKey","onWheel","handleScroll","overflow","transition","transform","VerticalTitle","writingMode","title","toUpperCase","Introduction","className","flex","paddingTop","topGap","Skills","Works","App","pagePadding","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.5cd8a02e.chunk.js","sourcesContent":["import * as React from 'react'\nimport Color from 'color'\n\ninterface IndicatorsProps {\n    keys: any[]\n    activeKey: any\n    onClick: any\n    currentBgColor: string\n}\n\nexport default class Indicators extends React.Component <IndicatorsProps, {}> {\n    setColor(): {active: string; default: string} {\n        const currentBgColor = this.props.currentBgColor || '#fff'\n        const color = Color(`${currentBgColor}`)\n        const isLight = color.isLight()\n        return {\n            active: color.negate().hex(),\n            default: isLight ? color.darken(0.2).hex() : color.lighten(0.2).hex()\n        }\n    }\n    render() {\n        return (\n            <div style={{\n                position: \"fixed\",\n                right: '15px',\n                top: '0',\n                bottom: '0',\n                display: 'flex',\n                flexDirection: 'column',\n                justifyContent: 'center'\n            }}>\n                {this.props.keys.map(item => {\n                    return <span key={item} style={{\n                        width: '18px',\n                        height: '2px',\n                        borderRadius: '1px',\n                        background: item === this.props.activeKey ? this.setColor().active : this.setColor().default,\n                        marginBottom: '15px'\n                    }} onClick={() => this.props.onClick(item)}></span>\n                })}\n            </div>\n        )\n    }\n}","import * as React from 'react'\nimport Color from 'color'\n\ninterface MenusProps {\n    currentBgColor: string\n}\nexport default class Menus extends React.Component<MenusProps, {}> {\n    iconStyle(): {} {\n        const border_size: string = '3px'\n        const border_gap: string = '5px'\n        const currentBgColor = this.props.currentBgColor || '#fff'\n        const color = Color(currentBgColor)\n            .negate()\n            .hex()\n        const border = `${border_size} solid ${color}`\n        return {\n            display: 'block',\n            position: 'relative',\n            width: '24px',\n            height: border_size,\n            padding: `${border_gap} 0`,\n            backgroundColor: color,\n            backgroundClip: 'content-box',\n            borderTop: border,\n            borderBottom: border\n        }\n    }\n    render() {\n        return (\n            <div\n                style={{\n                    position: 'fixed',\n                    top: '15px',\n                    right: '15px',\n                    zIndex: 1\n                }}\n            >\n                <span style={this.iconStyle()}></span>\n            </div>\n        )\n    }\n}\n","import * as React from 'react'\n// import { CSSTransition } from 'react-transition-group'\n\nimport Indicators from './Indicators'\nimport Menus from './Menus'\n\ninterface SliderProps {\n    children: JSX.Element[]\n}\ninterface SliderState {\n    length: number\n    prevKey: any\n    activeKey: any\n    keys: any[]\n    list: any[]\n    scrollAble: boolean\n    currentBgColor: string\n}\n\nexport default class FullPageSlider extends React.Component<\n    SliderProps,\n    SliderState\n> {\n    constructor(props: SliderProps) {\n        super(props)\n        this.state = {\n            length: 0,\n            prevKey: 0,\n            activeKey: 0,\n            keys: [],\n            list: [],\n            scrollAble: true,\n            currentBgColor: ''\n        }\n    }\n    componentDidMount() {\n        const length = this.props.children.length\n        const children = this.props.children\n        let currentBgColor: string = this.state.currentBgColor\n        const keys = children.map(item => item.key)\n        const activeKey = keys[0]\n        const list = children.map(item => {\n            let i = {\n                key: item.key,\n                show: false,\n                element: item\n            }\n            if (activeKey === i.key) {\n                i.show = true\n                currentBgColor = item.props.bgColor\n            }\n            return i\n        })\n        this.setState({\n            length,\n            keys,\n            activeKey,\n            list,\n            currentBgColor\n        })\n    }\n    scrollChange = (key: any): void => {\n        const prevKey = this.state.activeKey\n        let currentBgColor: string = this.state.currentBgColor\n        const list = this.state.list.map(item => {\n            if (key === item.key) {\n                item.show = true\n                currentBgColor = item.element.props.bgColor\n            } else {\n                item.show = false\n            }\n            return item\n        })\n        this.setState({\n            activeKey: key,\n            prevKey,\n            list,\n            currentBgColor\n        })\n        let timer = setTimeout(() => {\n            this.setState({\n                scrollAble: true\n            })\n            clearTimeout(timer)\n        }, 800)\n    }\n    handleScroll(e: any) {\n        if (this.state.scrollAble && Math.abs(e.deltaY) > 5) {\n            this.setState({\n                scrollAble: false\n            })\n            const activeKey = this.state.activeKey\n            const list = this.state.list\n            const currentKeyIndex = list.findIndex(\n                item => item.key === activeKey\n            )\n            const downKey =\n                currentKeyIndex < list.length - 1\n                    ? list[currentKeyIndex + 1].key\n                    : list[list.length - 1].key\n            const upKey =\n                currentKeyIndex > 0\n                    ? list[currentKeyIndex - 1].key\n                    : list[0].key\n            const direction: string =\n                e.deltaY > 0\n                    ? 'down' /** 显示更下面的内容 */\n                    : 'up' /** 显示更上面的内容 */\n            if (direction === 'up') {\n                this.scrollChange(upKey)\n            } else {\n                this.scrollChange(downKey)\n            }\n        }\n    }\n    children(): JSX.Element[] | any {\n        return this.state.list.map((item: any) => {\n            return (\n                <div style={{ width: '100vw', height: '100vh' }} key={item.key}>\n                    {item.element}\n                </div>\n            )\n        })\n    }\n    render() {\n        return (\n            <main\n                onWheel={(e: any) => this.handleScroll(e)}\n                style={{ overflow: 'hidden', height: '100vh'}}\n            >\n                <Menus currentBgColor={this.state.currentBgColor} />\n                <div style={{\n                    transition: 'all 700ms ease 0ms',\n                    transform: `translateY(-${this.state.keys.findIndex(i => i === this.state.activeKey) * 100}vh)`\n                }}>{this.children()}</div>\n                <Indicators\n                    keys={this.state.keys}\n                    activeKey={this.state.activeKey}\n                    onClick={this.scrollChange}\n                    currentBgColor={this.state.currentBgColor}\n                />\n            </main>\n        )\n    }\n}\n","import * as React from 'react'\nimport Color from 'color'\n\ninterface titleProps {\n    title: string\n    bgColor: string\n}\n\nexport default class VerticalTitle extends React.Component<titleProps, {}> {\n    render() {\n        return (\n            <h1 style={{\n                writingMode: 'vertical-rl',\n                transform: 'rotate(180deg)',\n                padding: '0 96px',\n                color: Color(this.props.bgColor).negate().hex()\n            }}>\n                {this.props.title.toUpperCase()} ————\n            </h1>\n        )\n    }\n}","import * as React from 'react'\nimport VerticalTitle from '../widgets/VerticalTitle'\nimport Color from 'color'\n\nexport default class Introduction extends React.Component <{bgColor: string; padding: string; topGap: string}, {}> {\n    render () {\n        return (\n            <section className=\"full-page\" style={{\n                background: this.props.bgColor,\n                color: Color(this.props.bgColor).negate().hex(),\n                padding: this.props.padding,\n                display: 'flex'\n            }}>\n                <div className=\"content\" style={{flex: '1', paddingTop: this.props.topGap}}>\n                    <VerticalTitle title=\"my introduction\" bgColor={this.props.bgColor}/>\n                </div>\n                <div className=\"img\" style={{flex: '1'}}></div>\n            </section>\n        )\n    }\n}","import * as React from 'react'\nimport VerticalTitle from '../widgets/VerticalTitle'\nimport Color from 'color'\n\nexport default class Skills extends React.Component<{bgColor: string; padding: string; topGap: string}, {}> {\n    render () {\n        return (\n            <section className=\"full-page\" style={{\n                background: this.props.bgColor,\n                color: Color(this.props.bgColor).negate().hex(),\n                padding: this.props.padding,\n                display: 'flex'\n            }}>\n                <div className=\"img\" style={{flex: '1', paddingTop: this.props.topGap}}>\n                    <VerticalTitle title=\"my skills\" bgColor={this.props.bgColor}/>\n                </div>\n                <div className=\"content\" style={{flex: '1', paddingTop: '10%'}}>\n                    \n                </div>\n            </section>\n        )\n    }\n}","import * as React from 'react'\nimport VerticalTitle from '../widgets/VerticalTitle'\nimport Color from 'color'\n\nexport default class Works extends React.Component<{bgColor: string; padding: string; topGap: string}, {}>  {\n    render() {\n        return (\n            <section className=\"full-page\" style={{\n                background: this.props.bgColor,\n                color: Color(this.props.bgColor).negate().hex(),\n                padding: this.props.padding,\n                display: 'flex'\n            }}>\n                <div className=\"content\" style={{flex: '1', paddingTop: this.props.topGap}}>\n                    <VerticalTitle title=\"my works\" bgColor={this.props.bgColor}/>\n                </div>\n                <div className=\"img\" style={{flex: '1'}}></div>\n            </section>\n        )\n    }\n}","import * as React from 'react'\nimport './styles/App.scss'\n\nimport FullPageSlider from './widgets/FullPageSlider'\nimport Introduction from './pages/Introduction'\nimport Skills from './pages/Skills'\nimport Works from './pages/Works'\n\nexport default class App extends React.Component {\n    state = {\n        pagePadding: '15px',\n        topGap: '38.2vh'\n    }\n    render() {\n        return (\n            <FullPageSlider>\n                <Introduction bgColor='#ececec' padding={this.state.pagePadding} topGap={this.state.topGap} key={0}/>\n                <Skills bgColor='#595959' padding={this.state.pagePadding} topGap={this.state.topGap} key={1}/>\n                <Works bgColor=\"#ececec\" padding={this.state.pagePadding} topGap={this.state.topGap} key={2}/>\n            </FullPageSlider>\n        )\n    }\n}","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport 'reset-css'\nimport 'animate.css'\n\nReactDOM.render(<App />, document.getElementById('root'))"],"sourceRoot":""}